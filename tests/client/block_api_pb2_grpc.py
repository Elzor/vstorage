# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import block_api_pb2 as block__api__pb2


class BlockApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Delete = channel.unary_unary(
        '/block_api.BlockApi/Delete',
        request_serializer=block__api__pb2.DeleteRequest.SerializeToString,
        response_deserializer=block__api__pb2.DeleteReply.FromString,
        )
    self.Append = channel.unary_unary(
        '/block_api.BlockApi/Append',
        request_serializer=block__api__pb2.AppendRequest.SerializeToString,
        response_deserializer=block__api__pb2.AppendReply.FromString,
        )
    self.Upsert = channel.unary_unary(
        '/block_api.BlockApi/Upsert',
        request_serializer=block__api__pb2.UpsertRequest.SerializeToString,
        response_deserializer=block__api__pb2.UpsertReply.FromString,
        )
    self.Insert = channel.unary_unary(
        '/block_api.BlockApi/Insert',
        request_serializer=block__api__pb2.InsertRequest.SerializeToString,
        response_deserializer=block__api__pb2.InsertReply.FromString,
        )
    self.Get = channel.unary_unary(
        '/block_api.BlockApi/Get',
        request_serializer=block__api__pb2.GetRequest.SerializeToString,
        response_deserializer=block__api__pb2.GetReply.FromString,
        )
    self.Exists = channel.unary_unary(
        '/block_api.BlockApi/Exists',
        request_serializer=block__api__pb2.ExistsRequest.SerializeToString,
        response_deserializer=block__api__pb2.ExistsReply.FromString,
        )
    self.Idx = channel.unary_unary(
        '/block_api.BlockApi/Idx',
        request_serializer=block__api__pb2.IdxRequest.SerializeToString,
        response_deserializer=block__api__pb2.IdxReply.FromString,
        )
    self.Status = channel.unary_unary(
        '/block_api.BlockApi/Status',
        request_serializer=block__api__pb2.StatusRequest.SerializeToString,
        response_deserializer=block__api__pb2.StatusReply.FromString,
        )


class BlockApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Append(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Upsert(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Insert(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Exists(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Idx(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Status(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BlockApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=block__api__pb2.DeleteRequest.FromString,
          response_serializer=block__api__pb2.DeleteReply.SerializeToString,
      ),
      'Append': grpc.unary_unary_rpc_method_handler(
          servicer.Append,
          request_deserializer=block__api__pb2.AppendRequest.FromString,
          response_serializer=block__api__pb2.AppendReply.SerializeToString,
      ),
      'Upsert': grpc.unary_unary_rpc_method_handler(
          servicer.Upsert,
          request_deserializer=block__api__pb2.UpsertRequest.FromString,
          response_serializer=block__api__pb2.UpsertReply.SerializeToString,
      ),
      'Insert': grpc.unary_unary_rpc_method_handler(
          servicer.Insert,
          request_deserializer=block__api__pb2.InsertRequest.FromString,
          response_serializer=block__api__pb2.InsertReply.SerializeToString,
      ),
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=block__api__pb2.GetRequest.FromString,
          response_serializer=block__api__pb2.GetReply.SerializeToString,
      ),
      'Exists': grpc.unary_unary_rpc_method_handler(
          servicer.Exists,
          request_deserializer=block__api__pb2.ExistsRequest.FromString,
          response_serializer=block__api__pb2.ExistsReply.SerializeToString,
      ),
      'Idx': grpc.unary_unary_rpc_method_handler(
          servicer.Idx,
          request_deserializer=block__api__pb2.IdxRequest.FromString,
          response_serializer=block__api__pb2.IdxReply.SerializeToString,
      ),
      'Status': grpc.unary_unary_rpc_method_handler(
          servicer.Status,
          request_deserializer=block__api__pb2.StatusRequest.FromString,
          response_serializer=block__api__pb2.StatusReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'block_api.BlockApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
